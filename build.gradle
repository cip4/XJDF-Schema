buildscript {
    // Workaround to generate samples:
    //      ./gradlew --include-build ../sample-builder clean buildSamples
    // (where "../sample-builder" points to the code of the sample builder repo)
    try {
        gradle.includedBuild('cip4-sample-builder')
        dependencies {
            classpath("org.cip4:cip4-sample-builder:1.0-SNAPSHOT")
        }
    } catch (UnknownDomainObjectException e) {
        // nothing to do
    }
}

plugins {
    id 'groovy'
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor 30, 'seconds'
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    implementation localGroovy()

    testImplementation 'org.glassfish.jaxb:jaxb-runtime:4.0.2'
    testImplementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'

    testImplementation 'org.cip4.lib.xjdf:xJdfLib:latest.integration'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.4'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
}

test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors()
}

try {
    Class.forName('org.cip4.samples.SamplesPlugin');
    apply plugin: 'org.cip4.samples'

    buildSamples {
        inputDir = file("src/main/resources/samples")
        outputDir = file("build/generated-samples")
    }

    buildSamples.dependsOn test
} catch (ClassNotFoundException e) {
    // void
}
